Revision 1: 07:37 pm, 5 May 2008

--- blog.php ---
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/2002/REC-xhtml1-20020801/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US.UTF-8" lang="en_US.UTF-8">
	<head>
		<title>blog.php</title>
	</head>
	<body>
		<a name="TOC"></a>
		<div style="padding: 10px;">
			Table of contents:
			<div style="font-size: small;">
				<ol type="i">
<?php

$url='blog.xml';

putenv("TZ=Europe/London");

include 'xml_read.php';

$xml_parser = new sxml;
$src=implode ('', file ($url));
$xml_parser->parse($src);
$blogs=$xml_parser->data;

function myIsInt ($x) {
    return (is_numeric($x) ? intval($x) == $x : false);
}

if (isset($_GET['start']) && strlen(trim($_GET['start'])) != 0 && myIsInt($_GET['start'])) {
	$start_counter = $_GET['start'];
} else {
	$start_counter = 0;
}
if (isset($_GET['more']) && strlen(trim($_GET['more'])) != 0 && myIsInt($_GET['more'])) {
	$more_counter = $_GET['more'];
} else {
	$more_counter = 5;
}

$counter = 0;
$shown = 0;
foreach($blogs['BLOGS'][0]['child']['BLOG'] as $blog) {
	$counter = $counter + 1;
	if ($counter > $start_counter) {
		$shown = $shown + 1;
		if ($shown <= $more_counter) {
			echo "\t\t\t\t\t".'<li><a href="#'.$blog['child']['TIME'][0]['data'].'">'.$blog['child']['TITLE'][0]['data'].'</a></li>'."\n";
		} else {
			echo "\t\t\t\t\t".'<li><a href="#more">» More</a></li>'."\n";
			break;
		}
	}
}
if ($shown == 0) {
	echo "\t\t\t\t\t<li>Really, this should not have happened :)</li>";
}
echo "\t\t\t\t</ol>\n";
echo "\t\t\t</div>\n";
echo "\t\t</div>";

$username="database_username";
$password="database_password";
$database="database_name";

mysql_connect(localhost,$username,$password);
@mysql_select_db($database) or die( "Unable to select database");

$counter = 0;
$shown = 0;
foreach($blogs['BLOGS'][0]['child']['BLOG'] as $blog) {
	$counter = $counter + 1;
	if ($counter > $start_counter) {
		$shown = $shown + 1;
		if ($shown <= $more_counter) {
			$query = sprintf("SELECT * FROM t%d", $blog['child']['TIME'][0]['data']);
			$num = 0;
			$result = mysql_query($query);
			if ($result) {
				$num = mysql_num_rows($result);
			}
			echo '
		<div class="container">
			<a name="'.$blog['child']['TIME'][0]['data'].'"></a>
			<div class="title"><h3>'.$blog['child']['TITLE'][0]['data'].'</h3>'.date('h:i a, j F Y', $blog['child']['TIME'][0]['data']).'<h3></h3></div>
			<div class="textbody">
				'.$blog['child']['TEXT'][0]['data'].'
				<p><br /></p>
				<p style="text-align: left; font-size: small;"><em><a href="comment.php?name='.$blog['child']['TIME'][0]['data'].'" style="text-decoration: none;">Comments ('.$num.') / Permanent link</a></em> &mdash; <a href="#TOC" style="text-decoration: none;"><tt>GO TO TOC</tt></a></p>
			</div>
		</div>';
		} else {
			/* Go back by 1, so that we don't miss the current blog */
			$counter = $counter - 1;
			echo '
		<div class="pane" style="text-align: center;">
			<a name="more"></a><h3>
				<a href="?start='.$counter.'&amp;more='.$more_counter.'">More: Click here for older posts</a> &mdash;
				<a href="?start='.$start_counter.'&amp;more=5">';
			if ($more_counter == 5) {
				echo '<em>(5)</em>';
			} else {
				echo '(5)';
			}
			echo '</a>
				<a href="?start='.$start_counter.'&amp;more=10">';
			if ($more_counter == 10) {
				echo '<em>(10)</em>';
			} else {
				echo '(10)';
			}
			echo '</a>
				<a href="?start='.$start_counter.'&amp;more=20">';
			if ($more_counter == 20) {
                echo '<em>(20)</em>';
            } else {
                echo '(20)';
            }
            echo '</a>
			</h3>
		</div>
		<div class="textbody">Use your browser’s “Back” or “History” button for navigation.</div>
';
			break;
		}
	}
}

mysql_close();
?>
	</body>
</html>



--- comment.php ---
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/2002/REC-xhtml1-20020801/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en_US.UTF-8" lang="en_US.UTF-8">
	<head>
		<title>comment.php</title>
	</head>
	<body>
<?php

$url='blog.xml';

/* Set the timezone to UTC.
 */
putenv("TZ=Europe/London");

include 'xml_read.php';

$xml_parser = new sxml;
$src=implode ('', file ($url));
$xml_parser->parse($src);
$blogs=$xml_parser->data;

$submission = FALSE;
/* Check if a blog-id has been given */
$getvar = $_GET['name'];
if (isset($getvar) && strlen(trim($getvar)) != 0) {
	/* See if it exists */
	$exists = FALSE;
	foreach($blogs['BLOGS'][0]['child']['BLOG'] as $blog) {
		if ($_GET['name'] === $blog['child']['TIME'][0]['data']) {
			/* If exists, show it... */
			echo '
		<div class="container">
			<div class="title"><a name="'.$blog['child']['TIME'][0]['data'].'"></a><h3>'.$blog['child']['TITLE'][0]['data'].'</h3>'.date('h:i a, j F Y', $blog['child']['TIME'][0]['data']).'</div>
			<div class="textbody">
				'.$blog['child']['TEXT'][0]['data'].'
			</div>
		</div>';

			/* ... and proceed to show comments */
			$submission = FALSE;
			$exists = TRUE;
			break;
		}
	}
	/* if doesn't exist, exit */
	if ($exists == FALSE) {
		die('<p style="text-align: center;"><strong>Blog ID not found.</strong></p></body></html>');
	}
} else {
	/* See if this is because we are submitting a comment */
	if (strlen(trim($_POST['enteredblogid'])) == 0) {
		/* If not submitting a comment, exit */
		die('<p style="text-align: center;"><strong>No Blog ID specified.</strong></p></body></html>');
	} else {
		/* See if everything has been "POST"ed or not */
		if (strlen(trim($_POST['enteredipaddress'])) == 0 || strlen(trim($_POST['enteredname'])) == 0 || strlen(trim($_POST['enteredemail'])) == 0 || strlen(trim($_POST['enteredcomment'])) == 0) {
			/* if not, exit */
			die('<p style="text-align: center;"><strong>Please specifiy all input fields.</strong></p></body></html>');
		} else {
			/* If everything has been "POST"ed, proceed... */
			$submission = TRUE;
			$blog['child']['TIME'][0]['data'] = $_POST['enteredblogid'];
		}
	}
}

/* ... proceeding...
 * ... to handle comments
 */

/* Create database if doesn't exist already */
$username="database_username";
$password="database_password";
$database="database_name";

mysql_connect(localhost,$username,$password);
@mysql_select_db($database) or die( "Unable to select database");

/* Rudementary check for table name */
if (((int) $blog['child']['TIME'][0]['data']) < 10000) {
	echo $blog['child']['TIME'][0]['data'];
	echo "<br />\n";
	echo ((int) $blog['child']['TIME'][0]['data']);
	echo "<br />\n";
	die ('Serious error in table creation detected. Please mail webmaster.');

}
$query=sprintf("CREATE TABLE IF NOT EXISTS t%d (id int(6) NOT NULL auto_increment, ipaddress varchar(15) NOT NULL, date int(11) NOT NULL, comname varchar(30) NOT NULL, email varchar(50) NOT NULL, comment text(1000) NOT NULL, PRIMARY KEY (id), UNIQUE id (id), KEY id_2 (id))", mysql_real_escape_string($blog['child']['TIME'][0]['data']));
$result=mysql_query($query);

if (!$result) {
	$message  = 'Invalid query: '.mysql_error()."<br />\n";
	$message .= 'Whole query: ' . $query;
	die($message);
}

/* Load reCAPTCHA */
/*
 * This is necessary HERE, because if there is a problem with loading recapthalib, comments will not be shown at all (which I think is a good thing).
 */
require_once('recaptchalib.php');

/* Check if we are submitting a comment or not */
if ($submission == TRUE) {
	/* Check if it was human */
	$privatekey = "theprivatekeywillgohere";
	$resp = recaptcha_check_answer ($privatekey,
		$_SERVER["REMOTE_ADDR"],
		$_POST["recaptcha_challenge_field"],
		$_POST["recaptcha_response_field"]);
	if ($resp->is_valid) {
		/* If reCAPTCHA works, update the table */
		
		/* Sanitize */
		$string_ipaddress = mysql_real_escape_string($_POST['enteredipaddress']);
		$string_name = mysql_real_escape_string($_POST['enteredname']);
		$string_email = mysql_real_escape_string($_POST['enteredemail']);
		$string_comment = mysql_real_escape_string($_POST['enteredcomment']);
		$pattern[0] = '/(\\\\)/';
		$pattern[1] = "/\"/";
		$pattern[2] = "/'/";
		$replacement[0] = '\\\\\\';
		$replacement[1] = '\"';
		$replacement[2] = "\\'";
		$len = strlen($string);
		$string_ipaddress = strip_tags(preg_replace($pattern, $replacement, $string_ipaddress));
		$string_name = strip_tags(preg_replace($pattern, $replacement, $string_name));
		$string_email = strip_tags(preg_replace($pattern, $replacement, $string_email));
		$string_comment = strip_tags(preg_replace($pattern, $replacement, $string_comment));
		$int_date = time();
		$string_email = preg_replace('/(;|\||`|>|<|&|^|"|'."\n|\r|'".'|{|}|[|]|\)|\()/i', "", $string_email);
		$query = sprintf("INSERT INTO t%d VALUES('', '%s', '%d', '%s', '%s', '%s')", mysql_real_escape_string($blog['child']['TIME'][0]['data']), $string_ipaddress, $int_date, $string_name, $string_email, $string_comment);
		$result = mysql_query($query);
		if ($result == FALSE) {
			die('<p><strong>Error submitting comment.</strong></p><p>This should not happen. Please inform webmaster.</p></body></html>');
		} else {
			$msg_mail = wordwrap('
A new message is waiting for you.
Blog-id: '.$blog['child']['TIME'][0]['data'].'
Author: '.$string_name.' ('.$string_email.') from '.$string_ipaddress.'
Time: '.date('m-d-Y', $int_date).'
Comment:
'.$string_comment.'

-------END-------');
			mail('webmaster@mysite.com','You have a New Comment on your blog',$msg_mail);
		}
	} else {
		/* If reCAPTCHA failed, exit */
		$error = $resp->error;
		die('<p><strong>The reCAPTCHA was not entered correctly. Go back and try it again.</strong></p><p>Error: '.$error.'</p></body></html>');
	}
	die('<p style="text-align: center;">Comment succesfully submitted.</p><p style="text-align: center;"><a href="blog.php">Go Back</a></p></body></html>');
} else {
	/* If we are not submitting, show the already present comments */
	$query = sprintf("SELECT * FROM t%d ORDER BY date DESC", mysql_real_escape_string($blog['child']['TIME'][0]['data']));
	$result = mysql_query($query);
	$num = mysql_num_rows($result);
	echo '
		<div style="text-align: center; font-weight: bold;">Comments are properties of whoever wrote them</div>';
	/* Check if there are any comments present or not */
	$i = 0;
	while ($i < $num) {
		$name = mysql_result($result, $i, "comname");
		$date_of_commenting = mysql_result($result, $i, "date");
		$diff = mktime(date("G"),date("i"),date("s"),date("m"),date("d"),date("Y")) - $date_of_commenting;
		$unit = "second";
		if ($diff > 60) {
			$diff = floor($diff/60);
			$unit = "minute";
			if ($diff > 60) {
				$diff = floor($diff/60);
				$unit = "hour";
				if ($diff > 24) {
					$diff = floor($diff/24);
					$unit = "day";
					// if more than a week old, we report actual time
					if ($diff > 7) {
						$diff = "on ";
						$unit = date('l dS \of F Y h:i:s A', $date_of_commenting);
					}
				}
			}
		}
		if (floor($diff) > 1) {
			$unit = $unit."s";
		}
		if (floor($diff) != 0) {
			$unit = $unit." ago";
		}
		$comment = mysql_result($result, $i, "comment");
		$pattern[0] = '/(\\\)r/';
		$pattern[1] = '/(\\\)n/';
		$pattern[2] = '/(\\\)(\\\)(\\\)/';
		$replacement[0] = '';
		$replacement[1] = '<br/>';
		$replacement[2] = '';
		$comment = preg_replace($pattern, $replacement, $comment);
		echo '
		<div class="comment">
			<p><strong>'.$name.'</strong> said '."$diff $unit".':</p>
			<p>'.$comment.'</p>
		</div>';
		$i = $i + 1;
	}

	/* Present the form to submit new comment */
	
	// XXX: "date" is used for the time when the form was submitted and not reloaded. Thus, it is calculated after the form has been submitted but before it has been written to the table.
	echo '
		<form action="comment.php" method="post">
			<fieldset style="border-width: 0px;">
				<h4>Leave a Reply</h4>
				<input type="hidden" name="enteredipaddress" value="'.$_SERVER['REMOTE_ADDR'].'" />
				<input type="hidden" name="enteredblogid" value="'.$blog['child']['TIME'][0]['data'].'" />
				<p>
				<input type="text" name="enteredname" id="enteredname" maxlength="30" /> <label for="enteredname">Name<sup>*</sup></label><br />
				<input type="text" name="enteredemail" id="enteredemail" maxlength="50" /> <label for="enteredemail">E-mail<sup>*</sup></label><br />
				<label for="enteredcomment">Comment:<sup>*</sup></label><br />
				<textarea cols="60" rows="10" name="enteredcomment" id="enteredcomment"></textarea>
				</p>
				<p style="font-size: small;">* All input fields are necessary. No HTML allowed.</p>
				';
	
	/* Show the re-captcha */
	$publickey = "publickeywillgohere";
	echo recaptcha_get_html($publickey, $error);
	
	echo '
				<p><input type="submit" value="Submit comment" /></p>
			</fieldset>
		</form>';
}

/* close database */
mysql_close();
?>
	</body>
</html>



--- blog.xml ---
<?xml version="1.0" encoding="UTF-8"?>
<!-- For current Unix time at UTC, use this command: date -u +%s -->
<blogs>
	<blog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="blog.xsd">
		<time>1208993402</time>
		<title>PHP 4 and XML parsing (update)</title>
		<text><![CDATA[
			<p>Sample blog.xml</p>
			]]></text>
	</blog>
</blogs>



--- blog.xsd ---
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="blogs">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="blog"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="blog">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="time"/>
        <xs:element ref="title"/>
        <xs:element ref="text"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="time" type="xs:integer"/>
  <xs:element name="title" type="xs:string"/>
  <xs:element name="text" type="xs:string"/>
</xs:schema>

